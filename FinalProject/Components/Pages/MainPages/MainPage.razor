@page "/"
@layout FinalProject.Components.Layout.LandingLayout.Landing1
@using Data.DTOs
@using Repository.Interface
@using System.Security.Claims
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IAppointmentRepository AppointmentRepository
@rendermode InteractiveServer

<!-- Import Bootstrap -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />

<!-- Import Toast CSS -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" />

<div class="container-fluid p-0">
    <!-- Carousel -->
    <div id="vaccineCarousel" class="carousel slide" data-bs-ride="carousel">
        <!-- Indicators -->
        <div class="carousel-indicators">
            <button type="button" data-bs-target="#vaccineCarousel" data-bs-slide-to="0" class="active"></button>
            <button type="button" data-bs-target="#vaccineCarousel" data-bs-slide-to="1"></button>
            <button type="button" data-bs-target="#vaccineCarousel" data-bs-slide-to="2"></button>
        </div>
        <div class="carousel-inner">
            <div class="carousel-item active">
                <img src="/assets/cartoon.jpeg" class="d-block w-100" style="height: 700px; object-fit: cover;" alt="Vaccine Image 1">
            </div>
            <div class="carousel-item">
                <img src="/assets/doctors.jpeg" class="d-block w-100" style="height: 700px; object-fit: cover;" alt="Vaccine Image 2">
            </div>
            <div class="carousel-item">
                <img src="/assets/vaccines.jpeg" class="d-block w-100" style="height: 700px; object-fit: cover;" alt="Vaccine Image 3">
            </div>
        </div>
        <button class="carousel-control-prev" type="button" data-bs-target="#vaccineCarousel" data-bs-slide="prev">
            <span class="carousel-control-prev-icon"></span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#vaccineCarousel" data-bs-slide="next">
            <span class="carousel-control-next-icon"></span>
        </button>
    </div>

    <!-- Hero Section -->
    <section class="text-center py-5 bg-primary text-white">
        <div class="container">
            <h1 class="fw-bold">Protect Your Health with VaccineCare</h1>
            <p class="lead">Easily book vaccination appointments and track your child's immunization schedule.</p>
            <a class="btn btn-lg btn-light fw-bold" href="/schedule">Book Now</a>
        </div>
    </section>

    <!-- How It Works -->
    <section class="w-100 my-5 px-5">
        <h2 class="text-center mb-4">How It Works</h2>
        <div class="row text-center">
            <div class="col-md-4">
                <h4>Select a Vaccine</h4>
                <p>Choose single or package vaccinations for your child.</p>
            </div>
            <div class="col-md-4">
                <h4>Schedule an Appointment</h4>
                <p>Pick a suitable time.</p>
            </div>
            <div class="col-md-4">
                <h4>Get Vaccinated</h4>
                <p>Visit the center on your appointment date.</p>
            </div>
        </div>
    </section>

    <!-- Benefits of Vaccination -->
    <section class="w-100 my-5 p-4 bg-light rounded shadow-sm">
        <h2 class="text-center mb-4">Benefits of Vaccination</h2>
        <div class="row">
            <div class="col-md-4 text-center">
                <p class="fw-semibold">Protects children from dangerous diseases</p>
            </div>
            <div class="col-md-4 text-center">
                <p class="fw-semibold">Boosts immunity</p>
            </div>
            <div class="col-md-4 text-center">
                <p class="fw-semibold">Reminders and tracking for vaccination schedules</p>
            </div>
        </div>
    </section>

    <!-- Testimonials -->
    <section class="w-100 my-5 px-5">
        <h2 class="text-center mb-4">Parent Testimonials</h2>
        <div class="row">
            <div class="col-md-4">
                <div class="card p-3 shadow-sm">
                    <p class="fst-italic">"Great service! I no longer worry about my child's vaccination schedule."</p>
                    <footer class="text-end fw-semibold">— Mai Nguyen</footer>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card p-3 shadow-sm">
                    <p class="fst-italic">"Vaccination has never been easier. Highly satisfied!"</p>
                    <footer class="text-end fw-semibold">— An Tran</footer>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card p-3 shadow-sm">
                    <p class="fst-italic">"The reminders are so helpful, I never miss an appointment!"</p>
                    <footer class="text-end fw-semibold">— Huong Le</footer>
                </div>
            </div>
        </div>
    </section>

    <!-- FAQ Section -->
    <section class="w-100 my-5 px-5">
        <h2 class="text-center mb-4">Frequently Asked Questions</h2>
        <div class="accordion" id="faqAccordion">
            <div class="accordion-item">
                <h2 class="accordion-header">
                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#faq1">
                        How do I book a vaccination?
                    </button>
                </h2>
                <div id="faq1" class="accordion-collapse collapse show" data-bs-parent="#faqAccordion">
                    <div class="accordion-body">
                        You can book an appointment from the homepage by clicking "Book Now."
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#faq2">
                        Can I cancel my appointment?
                    </button>
                </h2>
                <div id="faq2" class="accordion-collapse collapse" data-bs-parent="#faqAccordion">
                    <div class="accordion-body">
                        Yes, you can cancel or reschedule at least 24 hours in advance.
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Notifications Area -->
    @if (upcomingAppointments.Count > 0 && showNotification)
    {
        <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 1050">
            <div class="toast show bg-info text-white" role="alert" aria-live="assertive" aria-atomic="true" >
                <div class="toast-header bg-info text-white">
                    <strong class="me-auto">Upcoming Appointments</strong>
                    <button type="button" class="btn-close btn-close-white" @onclick="DismissNotification" aria-label="Close"></button>
                </div>
                <div class="toast-body">
                    <p>You have @upcomingAppointments.Count upcoming appointment(s) tomorrow:</p>
                    <ul class="ps-3 mb-0">
                        @foreach (var appointment in upcomingAppointments)
                        {
                            <li>
                                @appointment.ChildName -
                                @(appointment.VaccineName ?? appointment.VaccinePackageName) at
                                @appointment.AppointmentDate.ToString("hh:mm tt")
                            </li>
                        }
                    </ul>
                    <div class="mt-2">
                        <a href="/appointments" class="btn btn-sm btn-light">View All</a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>



<!-- Import Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<!-- Import Toastr JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

@code {
    private List<AppointmentDTO> upcomingAppointments = new List<AppointmentDTO>();
    private bool showNotification = true;
    private System.Threading.Timer? notificationTimer;

    protected override async Task OnInitializedAsync()
    {

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        // Only run if user is authenticated
        if (user.Identity?.IsAuthenticated == true)
        {
            int currentUserId = await GetCurrentUserId();
            // Get appointments for tomorrow with "Assigned" status
            DateTime today = DateTime.Now;
            DateTime tomorrow = DateTime.Now.AddDays(1);
            upcomingAppointments = await AppointmentRepository.GetAppointmentsNotificationAsync(
                currentUserId,
                today,
                tomorrow,
                "Assigned");
            // Set a timer to check for notifications periodically (every 30 minutes)
            notificationTimer = new System.Threading.Timer(
                async _ => await CheckForNotifications(),
                null,
                TimeSpan.FromMinutes(30),
                TimeSpan.FromMinutes(30));
        }
    }

    private async Task<int> GetCurrentUserId()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        var userId = user.FindFirst(c => c.Type == ClaimTypes.NameIdentifier)?.Value;
        return int.Parse(userId);
    }

    private void DismissNotification()
    {
        showNotification = false;
        StateHasChanged();
    }

    private async Task CheckForNotifications()
    {
        int currentUserId = await GetCurrentUserId();
        DateTime today = DateTime.Now;
        DateTime tomorrow = DateTime.Now.AddDays(1);

        upcomingAppointments = await AppointmentRepository.GetAppointmentsNotificationAsync(
            currentUserId,
            today,
            tomorrow,
            "Assigned");

        showNotification = upcomingAppointments.Count > 0;
        await InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        notificationTimer?.Dispose();
    }
}
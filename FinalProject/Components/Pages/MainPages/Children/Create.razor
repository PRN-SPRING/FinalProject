@page "/children/create"
@layout FinalProject.Components.Layout.LandingLayout.Landing1
@using Repository.Interface
@using Data.Entities
@using System.Security.Claims
@inject NavigationManager Navigation
@inject IChildRepository ChildRepository
@inject AuthenticationStateProvider AuthenticationStateProvider

<h2>Create Child Profile</h2>

<EditForm Model="Child" OnValidSubmit="HandleValidSubmit" FormName="CreateChildForm">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label>Full Name</label>
        <InputText @bind-Value="Child.FullName" class="form-control" />
    </div>

    <div class="form-group">
        <label>Birthdate</label>
        <InputDate @bind-Value="Child.Birthdate" class="form-control" />
    </div>

    <div class="form-group">
        <label>Gender</label>
        <InputSelect @bind-Value="Child.Gender" class="form-control">
            <option value="Male">Male</option>
            <option value="Female">Female</option>
            <option value="Other">Other</option>
        </InputSelect>
    </div>

    <button type="submit" class="btn btn-primary">Create</button>
</EditForm>

<a href="/children" class="btn btn-secondary">Back to List</a>

@code {
    [SupplyParameterFromForm]
    private Child Child { get; set; } = new();
    private string? UserId;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        UserId = user.FindFirst(c => c.Type == ClaimTypes.NameIdentifier)?.Value;

        if (UserId == null)
        {
            Navigation.NavigateTo("/login");
            return;
        }
        Child.CustomerId = int.Parse(UserId);
    }

    private async Task HandleValidSubmit()
    {
        if (UserId == null)
        {
            Navigation.NavigateTo("/login");
            return;
        }

        Child.CustomerId = int.Parse(UserId);
        await ChildRepository.AddChildAsync(Child);
        Navigation.NavigateTo("/children");
    }
}

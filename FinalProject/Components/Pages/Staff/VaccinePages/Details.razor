@page "/staff/vaccines/details"
@attribute [Authorize(Roles = "Staff")]
@using Microsoft.EntityFrameworkCore
@using Data.DTOs
@using Repository
@using Repository.Interface
@inject IVaccineRepository VaccineRepository
@inject NavigationManager NavigationManager
@layout FinalProject.Components.Layout.StaffLayout.StaffLayout

<PageTitle>Vaccine Details</PageTitle>

<div class="container mt-5">
    <div class="card shadow-lg border-0">
        <div class="card-header bg-primary text-white text-center">
            <h3 class="mb-0">Vaccine Details</h3>
        </div>
        <div class="card-body">
            @if (vaccine is null)
            {
                <p class="text-center"><em>Loading...</em></p>
            }
            else
            {
                <dl class="row">
                    <dt class="col-sm-4 text-start fw-bold">Name:</dt>
                    <dd class="col-sm-8">@vaccine.Name</dd>

                    <dt class="col-sm-4 text-start fw-bold">Description:</dt>
                    <dd class="col-sm-8">@vaccine.Description</dd>

                    <dt class="col-sm-4 text-start fw-bold">Min Age to Use:</dt>
                    <dd class="col-sm-8">@vaccine.MinAgeToUse</dd>

                    <dt class="col-sm-4 text-start fw-bold">Max Age to Use:</dt>
                    <dd class="col-sm-8">@vaccine.MaxAgeToUse</dd>

                    <dt class="col-sm-4 text-start fw-bold">Price:</dt>
                    <dd class="col-sm-8">@vaccine.Price</dd>
                </dl>
                <div class="text-center mt-4">
                    <a href="@($"/staff/vaccines/edit?id={vaccine.Id}")" class="btn btn-warning me-2">
                        <i class="bi bi-pencil-square"></i> Edit
                    </a>
                    <a href="/staff/manage-vaccines" class="btn btn-secondary">
                        <i class="bi bi-arrow-left"></i> Back to List
                    </a>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private VaccineDTO? vaccine;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        vaccine = await VaccineRepository.GetVaccineByIdAsync(Id);

        if (vaccine is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}

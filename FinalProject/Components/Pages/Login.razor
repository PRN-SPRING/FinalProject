@page "/login"
@layout FinalProject.Components.Layout.LoginLayout
@using Repository.Interface;
@inject NavigationManager Navigation;
@inject IUserRepository UserRepository;
@rendermode InteractiveServer

<div class="login-box">
    <h2>Login</h2>
    <div class="form-group">
        <input type="text" class="form-control" placeholder="Username" @bind="username" />
    </div>
    <div class="form-group">
        <input type="password" class="form-control" placeholder="Password" @bind="password" />
    </div>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="error-message">@errorMessage</div>
    }

    <button class="btn btn-primary" @onclick="HandleLogin">Login</button>

    <div class="register-link">
        <a href="/register">No account? Register</a>
    </div>
</div>

@code {
    private string username = "";
    private string password = "";
    private string errorMessage = "";

    private async Task HandleLogin()
    {
        try
        {
            var isAuthenticated = await UserRepository.AuthenticateAsync(username, password);
            if (isAuthenticated)
            {
                errorMessage = "Success";
                StateHasChanged();
                Navigation.NavigateTo("/home");
            }
            else
            {
                errorMessage = "Wrong username or password";
                StateHasChanged();
            }
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred during login";
            StateHasChanged();
        }
    }
}

@page "/admin"
@attribute [Authorize(Roles = "Admin")]
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using BussinessObject.Entities
@using Repository.Interface
@inject IUserRepository UserRepository
@layout FinalProject.Components.Layout.AdminLayout.AdminMainLayout

<PageTitle>Index</PageTitle>

<h1>Users</h1>

<p>
    <a href="users/create">Create New</a>
</p>

<QuickGrid Class="table" Items="users.AsQueryable()">
    <PropertyColumn Property="user => user.Username" />
    <PropertyColumn Property="user => user.FullName" />
    <PropertyColumn Property="user => user.Email" />
    <PropertyColumn Property="user => user.PhoneNumber" />
    <PropertyColumn Property="user => user.Role" />
    <PropertyColumn Property="user => user.Address" />
    <PropertyColumn Property="user => user.Gender" />
    <PropertyColumn Property="user => user.Birthdate" />
    <PropertyColumn Property="user => user.Specialty" />
    <PropertyColumn Property="user => user.LicenseNumber" />
    <PropertyColumn Property="user => user.Position" />
    <PropertyColumn Property="user => user.YearsOfExperience" />

    <TemplateColumn Context="user">
        <a href="@($"admin/user/edit?id={user.Id}")">Edit</a> |
        <a href="@($"admin/user/delete?id={user.Id}")" onclick="return confirm('Are you sure you want to delete this user?');">Delete</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private List<User> users = new List<User>();

    protected override async Task OnInitializedAsync()
    {
        users = await UserRepository.GetEmployeeUserAsync(new[] { "Doctor", "Staff" });
    }


}

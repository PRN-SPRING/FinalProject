@page "/register"
@layout FinalProject.Components.Layout.LoginLayout;
@using Repository.Interface
@inject IUserRepository UserRepository
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<Microsoft.AspNetCore.Components.Authorization.AuthorizeView></Microsoft.AspNetCore.Components.Authorization.AuthorizeView>

        <h2>Register</h2>
        <EditForm Model="registerModel" OnValidSubmit="HandleRegistration">
            <DataAnnotationsValidator />

            <div class="form-group">
                <label>Username:</label>
                <InputText @bind-Value="username" class="form-control" />
            </div>

            <div class="form-group">
                <label>Password:</label>
                <InputText @bind-Value="password" type="password" class="form-control" />
            </div>

            <div class="form-group">
                <label>Full Name:</label>
                <InputText @bind-Value="fullName" class="form-control" />
            </div>

            <div class="form-group">
                <label>Email:</label>
                <InputText @bind-Value="email" type="email" class="form-control" />
            </div>

            <div class="form-group">
                <label>Phone Number:</label>
                <InputText @bind-Value="phoneNumber" class="form-control" />
            </div>

            <div class="form-group">
                <label>Address:</label>
                <InputText @bind-Value="address" class="form-control" />
            </div>

            <div class="form-group">
                <label>Gender:</label>
                <InputSelect @bind-Value="gender" class="form-control">
                    <option value="">Select Gender</option>
                    <option value="Male">Male</option>
                    <option value="Female">Female</option>
                </InputSelect>
            </div>

            <div class="form-group">
                <label>Birthdate:</label>
                <Microsoft.AspNetCore.Components.Forms.InputDate @bind-Value="birthdate" class="form-control" />
            </div>

            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="error-message">@errorMessage</div>
            }

            <button type="submit" class="btn-register">Register</button>
        </EditForm>

<style>
    h2 {
        text-align: center;
        margin-bottom: 1.5rem;
        color: #333;
    }

    .form-group {
        margin-bottom: 1rem;
    }

    .form-control {
        width: 100%;
        padding: 0.75rem;
        border: 1px solid #ddd;
        border-radius: 4px;
        margin-bottom: 1rem;
    }

    .btn-register {
        width: 100%;
        padding: 0.75rem;
        background-color: #0d6efd;
        border: none;
        border-radius: 4px;
        color: white;
        cursor: pointer;
        margin-bottom: 1rem;
    }

    .btn-register:hover {
            background-color: #0b5ed7;
    }

    .register-link {
        text-align: center;
    }

        .register-link a {
            color: #0d6efd;
            text-decoration: none;
        }

            .register-link a:hover {
                text-decoration: underline;
            }

    .error-message {
        color: red;
        text-align: center;
        margin-bottom: 10px;
        font-size: 14px;
    }

</style>

@code {
    private string username = string.Empty;
    private string password = string.Empty;
    private string fullName = string.Empty;
    private string email = string.Empty;
    private string? phoneNumber;
    private string? address;
    private string? gender;
    private string role = "customer";
    private DateTime? birthdate;
    private string? errorMessage;
    
    // Dummy model for EditForm
    private object registerModel = new();

    private async Task HandleRegistration()
    {
        try
        {
            await UserRepository.CreateUserAsync(username, password, fullName, email, phoneNumber, address, gender, role, birthdate);

            NavigationManager.NavigateTo("/login");
        }
        catch (InvalidOperationException ex)
        {
            errorMessage = ex.Message;
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred during registration";
            Console.WriteLine(ex.Message);
        }
    }
}